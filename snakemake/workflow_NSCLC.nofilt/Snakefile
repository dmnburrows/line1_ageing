#==============================
rule all:
#==============================
    input:
        log_snake=config['out_path']+"/log.Snakefile",
        counts=expand(config['out_path']+"/{ID}/total_reads.txt", ID=config["ID"]),
        plus=expand(config['out_path']+"/{ID}/plus.nofilt.bam", ID=config["ID"]),
        minus=expand(config['out_path']+"/{ID}/minus.nofilt.bam", ID=config["ID"])

#Create log file for Snakefile
#==============================
rule log_snake:
#==============================
  output: config['out_path']+"/log.Snakefile"
  shell:  """
          cp ./Snakefile {output}
          """

#Count total reads in bam file
#==============================
rule count_reads:
#==============================
    input:
        config['in_path']+"/{ID}/Aligned.sortedByCoord.out.bam"
    output:
        config['out_path']+"/{ID}/total_reads.txt"
    shell:
        """
        samtools view {input} | wc -l > {output}
        """

#Split bam into forward and reverse strands
#==========================================
rule split_reads:
#==========================================
    input:
        config['in_path']+"/{ID}/Aligned.sortedByCoord.out.bam"
    output:
        plus=config['out_path']+"/{ID}/plus.bam",
        minus=config['out_path']+"/{ID}/minus.bam"

    run:
        shell("samtools view -h -F 0x10 {input} > {output.plus}"),
        shell("samtools view -h -f 0x10 {input} > {output.minus}")


#Filter bam files with TE bed file using samtools
#==========================================
rule samfilter_reads:
#==========================================
    input:
        plus=config['out_path']+"/{ID}/plus.bam",
        minus=config['out_path']+"/{ID}/minus.bam"
    output:
        plus=config['out_path']+"/{ID}/plus.nofilt.bam",
        minus=config['out_path']+"/{ID}/minus.nofilt.bam"
    run:
        shell("samtools view -b -h -L "+config['bed_plus_path']+" {input.plus} > {output.plus}")
        shell("samtools index {output.plus}")
        shell("samtools view -b -h -L "+config['bed_minus_path']+" {input.minus} > {output.minus}")
        shell("samtools index {output.minus}")
